'use client';

// import type { Metadata } from 'next'
import { NextIntlClientProvider } from 'next-intl'
import { notFound } from 'next/navigation'
import { Inter } from 'next/font/google'
import './globals.scss'

// AG Grid CSS
import 'ag-grid-community/styles/ag-grid.css'; // Core CSS
import 'ag-grid-community/styles/ag-theme-quartz.css'; // Theme

import { QueryClient, QueryClientProvider } from 'react-query'
import { ReactQueryDevtools } from 'react-query/devtools';
import { ApiProvider } from '@/assets/script/api/context/global'
import { ReactNode } from 'react';
import Navigation from './navigation';

interface LocaleLayoutProps {
  children: ReactNode
  params: { locale: string }
}

const inter = Inter({ subsets: ['latin'] })

// export const metadata: Metadata = {
//   title: 'Vupico Next App Exam',
//   description: 'Vupico next app exam, generated by create next app',
// }

const Layout = async ({ children, params: { locale } }: LocaleLayoutProps) => {
  let messages
  try {
    messages = (await import(`@/locale/${locale}.json`)).default
  } catch (error) {
    // console.error('Failed to load messages:', error);
    notFound()
  }

  // Create a client
  const mainQueryClient = new QueryClient()

  return (
    <html lang={locale}>
      <body className={inter.className}>
        <NextIntlClientProvider locale={locale} messages={messages} timeZone={'Asia/Singapore'}>
          <QueryClientProvider client={mainQueryClient}>
            <ApiProvider>
              <main className="main">
                <Navigation/>
                {children}
              </main>
              <ReactQueryDevtools initialIsOpen={false} />
            </ApiProvider>
          </QueryClientProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  )
}

const RootLayout = (props: LocaleLayoutProps) => {
  return (<Layout { ...props }>{props.children}</Layout>)
}

export default RootLayout